apply plugin: 'com.android.library'


android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs = ['src/main/java']
        main.jniLibs.srcDirs = ['src/main/libs']
        main.jni.srcDirs = []
    }

    defaultConfig {
        ndk {
            abiFilters "armeabi-v7a"
        }
    }

    task ndkBuild(type: Exec) {
        def ndkDir = android.ndkDirectory
        def ndkBuildCmd = "ndk-build.cmd"
        def osName = System.getProperty("os.name").toLowerCase()


        if (!osName.contains("windows")) {
            ndkBuildCmd = "ndk-build"
        }

        commandLine "$ndkDir/$ndkBuildCmd", '-C', file('src/main/jni').absolutePath
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    clean {
        delete 'src/main/obj'
        delete 'src/main/libs'
    }

    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation project(':fbreader:api')
        implementation project(':fbreader:util')
    }
}
