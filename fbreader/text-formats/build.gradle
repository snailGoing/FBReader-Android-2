apply plugin: 'com.android.library'


android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    ndkVersion '20.1.5948944'

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs = ['src/main/java']
        main.aidl.srcDirs = ['src/main/java']
        main.res.srcDirs = ['src/main/res']
        main.jniLibs.srcDirs = ['src/main/libs']
        main.jni.srcDirs = []
        main.manifest.srcFile 'src/main/AndroidManifest.xml'
    }

    defaultConfig {

        minSdkVersion 19
        targetSdkVersion 26
        ndk {
            abiFilters "armeabi-v7a"
        }
    }

    task ndkBuild(type: Exec) {
        def ndkDir = android.ndkDirectory
        def ndkBuildCmd = "ndk-build.cmd"
        def osName = System.getProperty("os.name").toLowerCase()


        if (!osName.contains("windows")) {
            ndkBuildCmd = "ndk-build"
        }

        commandLine "$ndkDir/$ndkBuildCmd", '-C', file('src/main/jni').absolutePath
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    clean {
        delete 'src/main/obj'
        delete 'src/main/libs'
        delete 'build'
        delete '.externalNativeBuild'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}